//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FarmDBV2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FarmDBEntities2 : DbContext
    {
        public FarmDBEntities2()
            : base("name=FarmDBEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountSubType> AccountSubTypes { get; set; }
        public virtual DbSet<AccountType> AccountTypes { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<AccountPerson> AccountPersons { get; set; }
        public virtual DbSet<Account> Accounts { get; set; }
    
        [DbFunction("FarmDBEntities2", "tvfTransactionListing")]
        public virtual IQueryable<tvfTransactionListing_Result> tvfTransactionListing(Nullable<System.DateTime> beginningTransDate, Nullable<System.DateTime> endingTransDate, Nullable<int> person)
        {
            var beginningTransDateParameter = beginningTransDate.HasValue ?
                new ObjectParameter("BeginningTransDate", beginningTransDate) :
                new ObjectParameter("BeginningTransDate", typeof(System.DateTime));
    
            var endingTransDateParameter = endingTransDate.HasValue ?
                new ObjectParameter("EndingTransDate", endingTransDate) :
                new ObjectParameter("EndingTransDate", typeof(System.DateTime));
    
            var personParameter = person.HasValue ?
                new ObjectParameter("Person", person) :
                new ObjectParameter("Person", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tvfTransactionListing_Result>("[FarmDBEntities2].[tvfTransactionListing](@BeginningTransDate, @EndingTransDate, @Person)", beginningTransDateParameter, endingTransDateParameter, personParameter);
        }
    
        [DbFunction("FarmDBEntities2", "tvfProfitLoss")]
        public virtual IQueryable<tvfProfitLoss_Result> tvfProfitLoss(Nullable<System.DateTime> beginningTransDate, Nullable<System.DateTime> endingTransDate, Nullable<int> person)
        {
            var beginningTransDateParameter = beginningTransDate.HasValue ?
                new ObjectParameter("BeginningTransDate", beginningTransDate) :
                new ObjectParameter("BeginningTransDate", typeof(System.DateTime));
    
            var endingTransDateParameter = endingTransDate.HasValue ?
                new ObjectParameter("EndingTransDate", endingTransDate) :
                new ObjectParameter("EndingTransDate", typeof(System.DateTime));
    
            var personParameter = person.HasValue ?
                new ObjectParameter("Person", person) :
                new ObjectParameter("Person", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tvfProfitLoss_Result>("[FarmDBEntities2].[tvfProfitLoss](@BeginningTransDate, @EndingTransDate, @Person)", beginningTransDateParameter, endingTransDateParameter, personParameter);
        }
    }
}
